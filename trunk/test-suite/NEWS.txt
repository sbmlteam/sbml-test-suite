	The Systems Biology Markup Language (SBML) Test Suite
	       NEWS -- history of user-visible changes

=== Version 2.0.0 alpha 3 (limited release 2008-08-27) ===

* Fixed a problem in the Standalone Application in unpackaging the
  archive of test cases.


=== Version 2.0.0 alpha 1 (limited release 2008-08-22) ===

* We redesigned and reimplemented the SBML Test Suite from the ground
  up.  The new system features a very large corpus of 900 carefully
  hand-crafted models, a new standalone test runner, and a web-based
  test runner available at http://sbml.org/Facilities/.

  All test cases have component tags indicating which SBML components
  are present in the model.  Basic models have either Compartment,
  Species and Reaction or Parameter and RateRule.  Additional
  complexity is added to the models by including other components:
  FunctionDefinition, InitialAssignment, AssignmentRule,
  AlgebraicRule, RateRule (in cases where Reactions are used),
  EventNoDelay and EventWithDelay.  At the time of this release, the
  test suite contains models with the basic components and up to two
  further components, with approximately 100 cases for each component.
  More complexity can be introduced with the addition of further
  components within a given model.

  At present UnitDefinition and Constraint are not supported.
  
  Each test case lists the test tags related to the SBML feature being
  tested.  Again, these start with the basic cases where the test tag
  is InitialAmount (in cases where there are Reactions) and
  NonConstantParameter (in rules based models).  Additional tags are
  added to increase the complexity and in some cases test the
  interaction between different features.  At present there are up to
  4 test tags on models within the Test Suite.
  
  All the test tags in the Tags.txt file have some coverage (an
  average of 50 cases per tag) WITH THE EXCEPTION of CSymbolDelay,
  Units, MassUnits.  Some tags have only a few related test cases eg
  FastReaction, MultiCompartment; this is mainly due to the lack of
  simulators supporting these and thus difficulty in generating and
  verifying test data.
  
  The data has in most cases been generated by MathSBML and verified
  with SBMLToolbox.  VCell and SBToolbox2 have been used for a few
  cases.  7% of cases have analytical solutions derived using the
  Maple symbolic engine via MATLAB.
  




----------------------------------------------------------------------
Last Modified: $Date$
Last Modified By: $Author$
$HeadURL$
----------------------------------------------------------------------

# The following is for [X]Emacs users.  Please leave in place.
# Local Variables:
# fill-column: 70
# End:
